const express = require('express');
const fs = require('fs');
const app = express();
const PORT = process.env.PORT || 5000;

app.use(express.json()); // Middleware to parse JSON requests

const FILE_PATH = 'leaderboard.json';

// Load leaderboard data from file
function loadLeaderboard() {
    if (fs.existsSync(FILE_PATH)) {
        return JSON.parse(fs.readFileSync(FILE_PATH, 'utf8'));
    }
    return [];
}

// Save leaderboard data to file
function saveLeaderboard(leaderboard) {
    fs.writeFileSync(FILE_PATH, JSON.stringify(leaderboard, null, 2));
}

// POST route to update leaderboard
app.post('/update_leaderboard', (req, res) => {
    const { name, score } = req.body;

    if (!name || score === undefined) {
        return res.status(400).json({ error: "Invalid request: Name and score are required" });
    }

    let leaderboard = loadLeaderboard();
    leaderboard.push({ name, score });
    leaderboard.sort((a, b) => b.score - a.score); // Sort by highest score
    saveLeaderboard(leaderboard);

    res.json({ message: "Leaderboard updated successfully!" });
});

// GET route to fetch leaderboard
app.get('/leaderboard', (req, res) => {
    res.json(loadLeaderboard());
});

// Default route to prevent 404 errors
app.get('/', (req, res) => {
    res.send("🏆 Leaderboard API is running!");
});

// Start the server
app.listen(PORT, () => console.log(`🚀 Server running on port ${PORT}`));
